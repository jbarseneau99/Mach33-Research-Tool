# Cloud Build configuration for testing (PR builds)
# This file defines the CI pipeline for pull request testing

steps:
  # Step 1: Install dependencies and run tests (only if code exists)
  - name: 'bash'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [ -f "frontend/package.json" ]; then
        echo "Frontend code found, running tests..."
        cd frontend
        npm ci
        npm run test -- --coverage --watchAll=false
      else
        echo "No frontend code found, skipping frontend tests"
      fi
    id: 'test-frontend'

  - name: 'python:3.11'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if [ -f "backend/requirements.txt" ]; then
        echo "Backend code found, running tests..."
        cd backend
        pip install -r requirements.txt
        python -m pytest tests/ --cov=./ --cov-report=xml
      else
        echo "No backend code found, skipping backend tests"
      fi
    id: 'test-backend'

  # Step 2: Security scan
  - name: 'aquasec/trivy:latest'
    entrypoint: 'trivy'
    args: ['fs', '--format', 'json', '--output', 'trivy-results.json', '.']
    id: 'security-scan'

  # Step 3: Code quality check
  - name: 'bash'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      echo "Code quality checks passed"
      if [ -f "trivy-results.json" ]; then
        echo "Security scan completed"
        cat trivy-results.json
      fi
    id: 'quality-check'
    waitFor: ['security-scan']

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_STANDARD_2'

# Timeout for the entire build
timeout: '600s'

# Substitutions for environment-specific builds
substitutions:
  _ENVIRONMENT: 'test'
  _REGION: 'us-central1'
