# Cloud Build configuration for Multi-Agent Research Platform (Cloud Run)
# This file defines the CI/CD pipeline for Cloud Run deployment

steps:
  # Step 1: Install dependencies and run tests
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['ci']
    dir: 'frontend'
    id: 'install-frontend-deps'

  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'test']
    dir: 'frontend'
    id: 'test-frontend'
    waitFor: ['install-frontend-deps']

  - name: 'python:3.11'
    entrypoint: 'pip'
    args: ['install', '-r', 'requirements.txt']
    dir: 'backend'
    id: 'install-backend-deps'

  - name: 'python:3.11'
    entrypoint: 'python'
    args: ['-m', 'pytest', 'tests/']
    dir: 'backend'
    id: 'test-backend'
    waitFor: ['install-backend-deps']

  # Step 2: Build Docker images
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/research-platform-frontend:$SHORT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/research-platform-frontend:latest',
      './frontend'
    ]
    id: 'build-frontend-image'
    waitFor: ['test-frontend']

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/research-platform-api:$SHORT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/research-platform-api:latest',
      './backend/api'
    ]
    id: 'build-api-image'
    waitFor: ['test-backend']

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/research-platform-worker:$SHORT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/research-platform-worker:latest',
      './backend/worker'
    ]
    id: 'build-worker-image'
    waitFor: ['test-backend']

  # Step 3: Push images to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/research-platform-frontend:$SHORT_SHA']
    id: 'push-frontend-image'
    waitFor: ['build-frontend-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/research-platform-frontend:latest']
    waitFor: ['build-frontend-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/research-platform-api:$SHORT_SHA']
    id: 'push-api-image'
    waitFor: ['build-api-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/research-platform-api:latest']
    waitFor: ['build-api-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/research-platform-worker:$SHORT_SHA']
    id: 'push-worker-image'
    waitFor: ['build-worker-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/research-platform-worker:latest']
    waitFor: ['build-worker-image']

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'research-platform-frontend'
    - '--image=gcr.io/$PROJECT_ID/research-platform-frontend:$SHORT_SHA'
    - '--region=us-central1'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--port=3000'
    - '--memory=512Mi'
    - '--cpu=1'
    - '--max-instances=10'
    id: 'deploy-frontend'
    waitFor: ['push-frontend-image']

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'research-platform-api'
    - '--image=gcr.io/$PROJECT_ID/research-platform-api:$SHORT_SHA'
    - '--region=us-central1'
    - '--platform=managed'
    - '--no-allow-unauthenticated'
    - '--port=8000'
    - '--memory=1Gi'
    - '--cpu=1'
    - '--max-instances=20'
    - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID,ENVIRONMENT=production'
    - '--service-account=research-platform-api@$PROJECT_ID.iam.gserviceaccount.com'
    id: 'deploy-api'
    waitFor: ['push-api-image']

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'research-platform-worker'
    - '--image=gcr.io/$PROJECT_ID/research-platform-worker:$SHORT_SHA'
    - '--region=us-central1'
    - '--platform=managed'
    - '--no-allow-unauthenticated'
    - '--memory=1Gi'
    - '--cpu=1'
    - '--max-instances=5'
    - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID,ENVIRONMENT=production'
    - '--service-account=research-platform-worker@$PROJECT_ID.iam.gserviceaccount.com'
    id: 'deploy-worker'
    waitFor: ['push-worker-image']

  # Step 5: Run database migrations
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'jobs'
    - 'create'
    - 'migration-job-$BUILD_ID'
    - '--image=gcr.io/$PROJECT_ID/research-platform-api:$SHORT_SHA'
    - '--region=us-central1'
    - '--task-count=1'
    - '--parallelism=1'
    - '--task-timeout=600'
    - '--max-retries=3'
    - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID,ENVIRONMENT=production'
    - '--service-account=research-platform-api@$PROJECT_ID.iam.gserviceaccount.com'
    - '--command=python,manage.py,migrate'
    id: 'create-migration-job'
    waitFor: ['deploy-api']

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'jobs'
    - 'execute'
    - 'migration-job-$BUILD_ID'
    - '--region=us-central1'
    - '--wait'
    id: 'run-migrations'
    waitFor: ['create-migration-job']

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitutionOption: 'ALLOW_LOOSE'

# Timeout for the entire build
timeout: '1800s'

# Substitutions for environment-specific builds
substitutions:
  _ENVIRONMENT: 'production'
  _REGION: 'us-central1'

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/research-platform-frontend:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/research-platform-frontend:latest'
  - 'gcr.io/$PROJECT_ID/research-platform-api:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/research-platform-api:latest'
  - 'gcr.io/$PROJECT_ID/research-platform-worker:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/research-platform-worker:latest' 